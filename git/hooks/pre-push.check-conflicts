#!/bin/sh

allowconflictcommits=$(git config --bool hooks.allowconflictcommits)
test "$allowconflictcommits" = true && exit

# Redirect stdout to stderr
exec 1>&2

while read -r local_ref local_sha1 remote_ref remote_sha1
do
	ref=${local_ref##refs/heads/}
	# Search cached files for a conflict marker (i.e. <<<<<<< or >>>>>>> or ======= or |||||||)
	conflicts=$(git diff -z --name-only --diff-filter=AMUR "$ref" "${ref}@{upstream}" | xargs -r0 grep -sErl '^\s*(<<<<<<<|>>>>>>>|=======|\|\|\|\|\|\|\|)(\s+.*)?$')
	if test -n "$conflicts"
	then
		echo
		echo "Commit rejected! Unresolved conflicts detected in the following file(s):"
		echo
		IFS="
	"
		for file in $conflicts; do echo "  â€º $file"; done
		echo
		echo "If you know what you're doing, you can disable this check by running:"
		echo
		echo "  git config hooks.allowconflictcommits true"
		echo
		exit 1
	fi
done
