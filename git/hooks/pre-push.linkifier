#!/bin/sh

#
#  Hook to print links to GitHub when pushing. Called by "git push" after it has
#  checked the remote status, but before anything has been pushed. If this script
#  exits with a non-zero status, nothing will be pushed.
#
#  This hook is called with the following parameters:
#
#    $1 -- Name of the remote to which the push is being done
#    $2 -- URL to which the push is being done
#
#  If pushing without using a named remote, both arguments will be equal.
#
#  Information about the commits which are being pushed is supplied as lines to
#  stdin in the form:
#
#    <local ref> <local sha1> <remote ref> <remote sha1>
#

remote="$1"
url="$2"

while read -r local_ref local_sha remote_ref remote_sha
do

    [ "$local_sha"  = "0000000000000000000000000000000000000000" ] && exit
    [ "$remote_sha" = "0000000000000000000000000000000000000000" ] && exit

    # Get the number of commits
    num_commits="$(git rev-list --count $remote_sha..$local_sha)"

    # Abbreviate SHA1s to 7 characters
    local_sha_abbrev=$(echo "$local_sha" | cut -c1-7)
    remote_sha_abbrev=$(echo "$remote_sha" | cut -c1-7)

    # Remove any .git suffixes to make formatting of the web_url easier
    url="$(echo "$url" | sed 's/\.git$//')"

    # Handle all commits
    case "$url" in
        *git@github.com:*)
            web_url="$(echo "$url" | sed -r 's%^git@github.com:(.+)$%https://github.com/\1%')"
            ;;
        *https://github.com/*)
            web_url="$url"
            ;;
        *)
            exit 0
            ;;
    esac

    # Handle single commits
    if [ -n "$num_commits" ] && [ "$num_commits" -eq 1 ]; then
        case "$url" in
            *github.com*)
                diff_fmt="/commit/%s"
                ;;
        esac
        printf "\n %b${web_url}${diff_fmt}%b\n\n" "\e[1;97m" "$local_sha_abbrev" "\e[0m"
        exit 0
   fi

    # Handle multiple commits
    case "$url" in
        *github.com*)
            diff_fmt="/compare/%s...%s"
            ;;
    esac
    printf "\n %b${web_url}${diff_fmt}%b\n\n" "\e[1;97m" "$remote_sha_abbrev" "$local_sha_abbrev" "\e[0m"

done
