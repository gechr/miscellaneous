#!/bin/sh

#
#  Hook to print links to Stash/Gitweb when pushing. Called by "git push" after it has
#  checked the remote status, but before anything has been pushed. If this script
#  exits with a non-zero status, nothing will be pushed.
#
#  This hook is called with the following parameters:
#
#    $1 -- Name of the remote to which the push is being done
#    $2 -- URL to which the push is being done
#
#  If pushing without using a named remote, both arguments will be equal.
#
#  Information about the commits which are being pushed is supplied as lines to
#  stdin in the form:
#
#    <local ref> <local sha1> <remote ref> <remote sha1>
#

remote="$1"
url="$2"

while read -r local_ref local_sha remote_ref remote_sha
do

    [ "$local_sha"  = "0000000000000000000000000000000000000000" ] && exit
    [ "$remote_sha" = "0000000000000000000000000000000000000000" ] && exit

    # Get the number of commits
    num_commits="$(git rev-list --count $remote_sha..$local_sha)"

    # Abbreviate SHA1s to 7 characters
    local_sha_abbrev=$(echo "$local_sha" | cut -c1-7)
    remote_sha_abbrev=$(echo "$remote_sha" | cut -c1-7)

    # Remove any .git suffixes to make formatting of the web_url easier
    url="$(echo "$url" | sed 's/\.git$//')"

    # Handle all commits
    case "$url" in
        *gitweb.gechr.io*)
            web_url="https://gitweb.gechr.io/?p=${url#*:}"
            ;;
        *stash.gechr.io:7999/~*)
            web_url="$(echo "$url" | sed -r -e 's%^ssh://git@(.+):7999/([^/]+)/(.+)$%https://\1/\2/repos/\3%' -e 's%~%users/%')"
            ;;
        *stash.gechr.io*)
            web_url="$(echo "$url" | sed -r 's%^ssh://git@(.+):7999/([^/]+)/(.+)$%https://\1/projects/\2/repos/\3%')"
            ;;
        *)
            exit 0
            ;;
    esac

    # Handle single commits
    if [ -n "$num_commits" ] && [ "$num_commits" -eq 1 ]; then
        case "$url" in
            *gitweb.gechr.io*)
                diff_fmt=".git;a=commitdiff;h=%s"
                ;;
            *stash.gechr.io*)
                diff_fmt="/commits/%s"
                ;;

        esac
        printf "\n ${web_url}${diff_fmt}\n\n" "$local_sha_abbrev"
        exit 0
   fi

    # Handle multiple commits
    case "$url" in
        *gitweb*)
            diff_fmt=".git;hp=%s;h=%s"
            ;;
        *stash.example.com*)
            # Stash doesn't currently allow arbitrary diffs between SHA1s on the same branch (STASH-2550)
            ;;
        esac
    printf "\n ${web_url}${diff_fmt}\n\n" "$local_sha_abbrev" "$remote_sha_abbrev"

done
