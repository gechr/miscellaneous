#!/bin/sh

#
#  Hook to print links to Gitweb when pushing. Called by "git push" after it has
#  checked the remote status, but before anything has been pushed. If this script
#  exits with a non-zero status, nothing will be pushed.
#
#  This hook is called with the following parameters:
#
#    $1 -- Name of the remote to which the push is being done
#    $2 -- URL to which the push is being done
#
#  If pushing without using a named remote, both arguments will be equal.
#
#  Information about the commits which are being pushed is supplied as lines to
#  stdin in the form:
#
#    <local ref> <local sha1> <remote ref> <remote sha1>
#

remote="$1"
url="$2"

while read local_ref local_sha remote_ref remote_sha
do
    case "$url" in
        # Only produce links when pushing to 'gitweb.example.com'
        *gitweb*)
            # Abbreviate SHA1s
            local_sha_abbrev=$(echo "$local_sha" | cut -c1-7)
            remote_sha_abbrev=$(echo "$remote_sha" | cut -c1-7)
            # Count the number of commits
            num_commits="$(echo "$rev_list" | wc -w)"
            if [ "$num_commits" -eq 1 ]; then
                # Handle a single commit
                printf '\n https://gitweb.example.com/?p=%s.git;a=commitdiff;h=%s\n\n' "${url#*:}" "$local_sha_abbrev"
            else
                # Handle multiple commits
                printf '\n https://gitweb.example.com/?p=%s.git;a=commitdiff;h=%s;hp=%s\n\n' "${url#*:}" "$local_sha_abbrev" "$remote_sha_abbrev"
            fi
            ;;
    esac
done
